<!-- Os comentarios devem ter espacos no inicio e no fim, a -->
<!-- separar dos hifens -->
<!-- Nao devem ser usados caracteres especiais (p.ex. acentos) -->
<!-- Todas as tags e atributos sao obrigatorios, exceto onde for -->
<!-- referido o contrario -->

<!-- Na descricao abaixo, os simbolos utilizados tem o seguinte significado: -->
    <!-- ii: integer value -->
    <!-- ff: float value -->
    <!-- ss: string value -->
    <!-- cc: character "x" or "y" or "z" -->
    <!-- tt: "0" or "1" with Boolean significance -->

    
<dsx>


    <!-- deve definir-se um objeto para raiz do grafo , assim -->
    <!-- como o comprimento dos tres eixos (cilindros) -->
    <scene root="game" axis_length="5.0" /> 	<!-- ss é o identificador do node raiz, que deve ter o nome do cenario que se esta a desenhar 
											(ex: campoFutebol) -->
    
	
	
	<!-- DEVE SER DADA UMA MENSAGEM DE ERRO OU WARNING QUANDO UM DOS COMPONENTES ESTA EM FALTA E ESPECIFICAR A LINHA E O ERRO! -->
	
	
	
	<!-- VIEWS define o sitio das camaras e as propriedades das camaras -->
	<!-- Em runtime e' possivel mudar de uma camara para a outra. -->
	
    <views default="p1" > <!-- Identificador da camara default, definida numa perspective. -->
    
        <!-- declaracao obrigatoria de pelo menos uma vista; -->
        <!-- se varias vistas declaradas, o default e' a -->
        <!-- primeira vista; de cada vez que se pressione a tecla v/V, -->
        <!-- a vista muda para a proxima da lista; da --> 
        <!-- ultima vista da lista volta 'a primeira -->
        <perspective id="up" near="0.1" far="100" angle="22">
            <from x="4.5" y="30" z="4.5" />
            <to x="4.5" y="0" z="4" />
        </perspective>

        <perspective id="frontal" near="0.1" far="100" angle="85">
            <from x="4.5" y="5" z="11" />
            <to x="4.5" y="0" z="4.5" />
        </perspective>

        <perspective id="diagonal" near="0.1" far="100" angle="50">
            <from x="12.5" y="5" z="-5" />
            <to x="0" y="0" z="9" />
        </perspective>
		
		
		<!-- Cada conjunto de blocos perspective define uma camara. Para deifnir 10 camaras, precisamos de 10 blocos. -->
        
    </views>
    

	<!-- Iluminacao e' comum a toda a imagem. -->
	
    <illumination doublesided="1" local="1" > <!-- iluminacao local ou com observador no infinito (raios paralelos == ilum constante) -->
    
        <ambient r="0.5" g="0.5" b="0.5" a="1" />
        <background r="0.5" g="0.5" b="1" a="1" />
        
    </illumination>
    
	
    
    <lights>
    
        <!-- Deve existir um ou mais blocos "omni" ou "spot" --> <!-- Deve existir pelo menos uma fonte de luz. -->
        <!-- Os identificadores "id" nao podem ser repetidos -->
		
		<!-- omni e' ilumina de forma igual em todas as direcoes -->
        <omni id="omni1" enabled="0" >
            <location x="5" y="5" z="5" w="0.2" />
            <ambient r="0.1" g="0.1" b="0.1" a="1" />
            <diffuse r="0.7" g="0.7" b="0.7" a="1" />
            <specular r="0.1" g="0.1" b="0.1" a="0.1" />
        </omni>
        
		<!-- spot e' um foco. Tem um angulo onde a luz e' maxima. Tem uma zona que nao ilumina. E' feita uma transicao suave da zona
		iluminada para a zona nao iluminada, definida pelo exponent. -->

        <spot id="spot1" enabled="1" angle="10" exponent="0.5">
            <!-- atencao, "target" e' diferente de "direction" -->
            <target x="10" y="10" z="5"/>
            <location x="2" y="5.2" z="0.1" />
            <ambient r="0.5" g="0.5" b="0.5" a="0.5" />
            <diffuse r="0.5" g="0.5" b="0.5" a="0.5" />
            <specular r="0.5" g="0.5" b="0.5" a="0.5" />
        </spot>

        <spot id="spot2" enabled="1" angle="10" exponent="2">
            <!-- atencao, "target" e' diferente de "direction" -->
            <target x="4.5" y="0" z="4.5"/>
            <location x="4.5" y="10" z="4.5" />
            <ambient r="0.3" g="0.3" b="0.3" a="1" />
            <diffuse r="0.3" g="0.3" b="0.3" a="1" />
            <specular r="1" g="1" b="1" a="1" />
        </spot>
    </lights>
    
    
    <textures>
    
        <!-- Deve existir um ou mais blocos "texture" -->
        <!-- Os identificadores "id" nao podem ser repetidos -->
        <!-- length_s e length_t sao fatores de escala de textura:-->
        <!-- Exemplo length_s=3.0: uma ocorrencia da textura, em -->
        <!-- comprimento, deve cobrir um comprimento igual -->
        <!-- a 3 unidades;  -->
        <!-- Exemplo length_t=0.4, uma ocorrencia da textura, em -->
        <!-- largura, deve cobrir uma largura igual a 0.4 unidades.  -->
        <!-- Transf. Geometr. do tipo escalamento sobre os -->
        <!-- objetos respetivos podem a violar esta regra.         -->
        <!-- Nao necessario aplicar fatores de escala em  -->
        <!-- quadricas (esfera, ciclindro...) -->
        <texture id="board" file="./scenes/resources/board.png" length_s="1" length_t="1" /> 
 
        <texture id="black_fireplace" file="./scenes/resources/black_fireplace.jpg" length_s="1.0" length_t="1.0"/>

        <texture id="sofa_cream" file="./scenes/resources/sofa_cream.jpg" length_s="0.1" length_t="0.1"/>
        
        <texture id="beige_wall" file="./scenes/resources/beige_wall.jpg" length_s="0.5" length_t="0.5"/>

        <texture id="white_frame" file="./scenes/resources/white_frame.png" length_s="1" length_t="1"/>

        <texture id="alcatifa" file="./scenes/resources/alcatifa.jpg" length_s="0.2" length_t="0.2"/>

        <texture id="train" file="./scenes/resources/white_wood.jpg" length_s="1" length_t="1"/>
        
        
    </textures>

    
    <materials>

        <!-- Deve existir um ou mais blocos "material" -->
        <!-- Os identificadores "id" nao podem ser repetidos -->

        <material id="normal">
            <emission r="0.1" g="0.1" b="0.1" a="0.1" />
            <ambient r="0.3" g="0.3" b="0.3" a="0.3" />
            <diffuse r="0.3" g="0.3" b="0.3" a="0.3" />
            <specular r="0.3" g="0.3" b="0.3" a="0.3" />
            <shininess value="1" />
        </material>

        <material id="invisible">
            <emission r="0" g="0" b="0" a="0" />
            <ambient r="1" g="1" b="1" a="0" />
            <diffuse r="1" g="1" b="1" a="0" />
            <specular r="1" g="1" b="1" a="0" />
            <shininess value="0" />
        </material>

        <material id="red" >
            <emission r="0.8" g="0" b="0" a="0.2" />
            <ambient r="0.8" g="0" b="0" a="0.2" />
            <diffuse r="1" g="0" b="0" a="0" />
            <specular r="1" g="0" b="0" a="0" />
            <shininess value="0.1" />
        </material>

         <material id="blue" >
            <emission r="0" g="0" b="0.8" a="0.2" />
            <ambient r="0" g="0" b="0.8" a="0.2" />
            <diffuse r="0" g="0" b="0" a="0" />
            <specular r="0" g="0" b="0" a="0" />
            <shininess value="0.1" />
        </material>

         <material id="black" >
            <emission r="0" g="0" b="0" a="0" />
            <ambient r="0" g="0" b="0" a="0" />
            <diffuse r="0" g="0" b="0" a="0" />
            <specular r="0" g="0" b="0" a="0" />
            <shininess value="0.8" />
        </material>

        <material id="white">
            <emission r="1" g="1" b="1" a="0.1" />
            <ambient r="1" g="1" b="1" a="0.3" />
            <diffuse r="1" g="1" b="1" a="0.3" />
            <specular r="1" g="1" b="1" a="0.6" />
            <shininess value="1000" />
        </material>   

    </materials>
    
    
    <transformations>
    
        <!-- Deve existir um ou mais blocos "transformation" -->
        <!-- Os identificadores "id" nao podem ser repetidos -->
        <transformation id="scale2">
           <!-- instrucoes a usar sem limite nem ordem -->
           <!-- deve existir pelo menos uma transformacao --> <!-- pelo menos a que usa a matriz identidade -->
           <scale x="2.0" y="2.0" z="2.0" />
        </transformation>
        
    </transformations>
    

    <animations>

            <!-- podem existir zero ou mais nós "animation" -->
            <!-- span é o tempo, em segundos, que a animação deve -->
            <!-- demorar. Nesta versão do formato DSX, type pode ter -->
            <!-- o valor "linear" ou "circular"; na animacao circular -->
            <!-- os angulos sao expressos em graus  -->

            <animation id="train_line1" span="5" type="linear">
                <controlpoint x="0" y="0" z="0" /> 
                <controlpoint x="10" y="0" z="0" />
            </animation>


            <animation id="train_bend1" span="5" type="circular" 
                       centerx="-3" centery="0" centerz="0"
                       radius="3" startang="0" rotang="90" />

            <animation id="train_line2" span="5" type="linear">
                <controlpoint x="0" y="0" z="0" /> 
                <controlpoint x="0" y="0" z="2" />
                <controlpoint x="-1" y="0" z="3" />
                <controlpoint x="-2" y="0" z="3" />
                <controlpoint x="-3" y="0" z="2" /> 
            </animation>

            <animation id="train_bend2" span="4" type="circular" 
                       centerx="2" centery="0" centerz="0"
                       radius="2" startang="180" rotang="-70" />
            
            <animation id="train_bend3" span="4" type="circular" 
                       centerx="-2" centery="0" centerz="0"
                       radius="2" startang="0" rotang="210" />
            


    </animations>
    

    <primitives>
    
        <!-- Deve existir um ou mais blocos "primitive" -->
        <!-- Os identificadores "id" nao podem ser repetidos -->
           
        <!-- apenas pode existir UMA das seguintes tags: -->
        <!--     rectangle, triangle, cylinder, sphere, torus -->
        <!-- os parametros devem ser interpretados, genericamente como-->
        <!-- em OpenGL/GLUT; o cilindro deve adicionalmente ter tampas -->

		<primitive id="cylinder">
            <cylinder base="0.4" top="0.4" height="0.2" slices="30" stacks="20" />
        </primitive>

        <primitive id="hexagon">
            <cylinder base="0.5" top="0.5" height="1" slices="6" stacks="20" />
        </primitive>

        <primitive id="plane">
            <plane dimX="1" dimY="1" partsX="100" partsY="100" />
        </primitive>

        <primitive id="vehicle">
            <vehicle dimension="1" />
        </primitive>

        <primitive id="chessboard">
            <chessboard du="8" dv="8" textureref="beige_wall" su="1" sv="1" >
                   <c1 r="1" g="1" b="1" a="1" />
                   <c2 r="0.5" g="0.5" b="0.5" a="1" />
                   <cs r="0.7" g="0" b="0" a="1" />
            </chessboard>
        </primitive> 

    </primitives>
    
    
    <components>
        
        <component id="game">
        
            <!-- bloco "transformation" obrigatorio -->
            <transformation>
            
			<!-- ESTA E A TRANSFORMACAO GEOMETRICA DESTE NO EM PARTICULAR, SEM CONTAR COM QUAISQUER OUTRAS. deafult = identidade? -->
			
                <!-- deve conter uma referencia a uma das "transformation" -->
                <!-- declaradas anteriormente -->
				<!--  <transformationref id="ss" /> -->

                <!-- ou, ALTERNATIVAMENTE, transformacoes explicitas, --> <!-- Nao usar as duas ao mesmo tempo!!! -->
                <!-- usando zero ou mais das instrucoes seguintes, sem -->
                <!-- limite nem ordem -->
                <!-- ex: bloco transformation pode ficar sem conteudo -->
                <scale x="1.0" y="1.0" z="1.0" />
            </transformation>
       
            <!-- declaracao obrigatoria de pelo menos um material; -->
            <!-- o material id="inherit", mantem (herda) material do "pai" -->
            <!-- se varios materiais declarados, o default e' o -->
            <!-- primeiro material; de cada vez que se pressione a tecla m/M, -->
            <!-- o material muda para o proximo material da lista; do --> 
            <!-- ultimo material da lista volta ao primeiro -->
            <materials>
                <material id="normal" />
            </materials>
                         
            <!-- declaracao obrigatoria de texture -->
            <!-- id="inherit" mantem (herda) a textura do objecto "pai" -->
            <!-- id="none" remove a textura recebida do pai -->
            <!-- a textura declarada sobrepoe a textura recebida do -->
            <!-- objecto "pai" -->
            <texture id="none" />
            
            <!-- bloco "children" obrigatorio num "component" -->
            <children>
            
                <!-- deve existir uma ou mais tags "componentref" e/ou -->
                <!-- "primitiveref", identificando outros -->
                <!-- componentes ou primitivas -->
                <!-- <componentref id="ss" /> -->
                <componentref id="board" />
                <!--<componentref id="white_piece" />
                <componentref id="black_piece" />-->
                <componentref id="cells"/>
                
            </children>
            
        </component>

         <!-- *** BEGIN OF BOARD *** -->

            <component id="board">
                 <transformation>
                   <translate x="4.5" y="0" z="4.5"/>
                   <scale x="9" y="1" z="9" />
                   <rotate axis="x" angle="-90" />
                </transformation>

                <materials>
                    <material id="white"/>
                </materials>

                <texture id="board"/>

                <children>
                    <primitiveref id="plane"/>
                </children>
            </component>

        <!-- *** END OF BOARD *** -->

        <!-- *** BEGIN OF CELL *** -->

        	<component id="cells">
        		<transformation>
        		</transformation>

        		<materials>
                   <material id="invisible"/>
                </materials>

                <texture id="none"/>

				<children>
					<componentref id="cell"/>
				</children>
        	</component>

            <component id="cell">
                 <transformation>
                   <translate x="0.8" y="0" z="4.5"/>
                   <scale x="1" y="0.005" z="1" />
                   <rotate axis="y" angle="-90" />
                   <rotate axis="x" angle="-90" />
                </transformation>

                <materials>
                   <material id="inherit"/>
                </materials>

                <texture id="none"/>

                <children>
                    <primitiveref id="hexagon"/>
                </children>
            </component>

        <!-- *** END OF CELL *** -->

        <!-- *** BEGIN OF WHITE PIECE *** -->

            <component id="white_piece">
                 <transformation>
                   <translate x="0.8" y="0" z="4.5"/>
                   <rotate axis="x" angle="-90" />
                </transformation>

                <materials>
                            <material id="white"/>
                </materials>

                <texture id="none"/>

                <children>
                    <primitiveref id="cylinder"/>
                </children>
            </component>

        <!-- *** END OF WHITE PIECE *** -->

        <!-- *** BEGIN OF BLACK PIECE *** -->

            <component id="black_piece">
                 <transformation>
                   <translate x="3.55" y="0" z="4.5"/>
                   <rotate axis="x" angle="-90" />
                </transformation>

                <materials>
                   <material id="black"/>
                </materials>

                <texture id="none"/>

                <children>
                    <primitiveref id="cylinder"/>
                </children>
            </component>

        <!-- *** END OF WHITE PIECE *** -->

   
    </components>

</dsx>